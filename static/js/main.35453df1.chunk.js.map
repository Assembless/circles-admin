{"version":3,"sources":["utils/language.ts","utils/theme.ts","pages/Home/trans.ts","pages/Home/Navigation/trans.ts","assets/circles-logo.svg","pages/Home/Navigation/index.tsx","pages/Home/Navigation/styles.ts","pages/Home/Welcome/trans.ts","pages/Home/Welcome/index.tsx","pages/Home/Welcome/styles.ts","api/client.ts","utils/hooks/general.ts","api/hooks.ts","config/config.ts","api/utils.ts","api/commands.ts","pages/Home/Users/trans.ts","pages/Home/Users/index.tsx","pages/Home/Users/styles.ts","pages/Home/Rooms/index.tsx","pages/Home/Rooms/styles.ts","pages/Home/index.tsx","pages/Home/styles.ts","pages/WrongPage/trans.ts","pages/WrongPage/index.tsx","pages/WrongPage/styles.ts","pages/Login/styles.ts","pages/Login/index.tsx","components/Routes.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOCALES","LIGHT_THEME","createMuiTheme","palette","type","primary","main","secondary","background","default","DARK_THEME","translations","title","en_US","de_DE","pl_PL","example","useStyles","makeStyles","theme","createStyles","root","toolbar","height","boxShadow","logo","marginRight","cursor","navlink","margin","Navigation","props","useLittera","classes","history","useHistory","AppBar","elevation","position","color","Toolbar","className","src","onClick","push","Button","variant","display","flexWrap","container1","flex","minWidth","padding","top1","marginBottom","borderRadius","bottom1","statContainer","container2","Welcome","cx","style","Box","Client","url","this","args","Object","entries","map","e","JSON","stringify","join","command","Promise","resolve","reject","once","cmd","exec","makeArguments","reqUrl","headers","Headers","fetch","mode","then","response","json","parsed_response","console","log","catch","Command","status","data","useSignal","useState","updateState","useCallback","useForkedState","fn","ref","useRef","signal","current","value","setState","val","useEffect","cli","host_url","useCommand","a","_args","execute","rq","isLoaded","request","arrayToStringList","arr","toString","replace","checkType","name","t","Array","isArray","types","includes","Error","checkField","obj","field","AccountList","included","volume","RoomList","UserDetailsWelcome","UserDetails","accounts","path","account","find","acc","id","match","params","flexDirection","alignItems","Avatar","width","marginTop","alt","avatar_url","details","first_name","label","SingleAccount","accData","TableRow","TableCell","avatarContainer","avatar","last_name","flags","leftContainer","borderRight","rightContainer","overflowY","tableRow","categoryName","opacity","paddingRight","paddingLeft","border","fontSize","fontWeight","Users","accountsRq","undefined","exact","component","Table","TableHead","TableBody","index","SingleRoom","roomData","h4","Component","roomsRq","rooms","room","Home","Rooms","WrongPage","translated","justifyContent","formContainer","topContainer","login","password","btnContainer","loginBtn","error","validate","values","process","REACT_APP_LOGIN","REACT_APP_PASSWORD","errors","username","Login","inputValues","setInputValues","setErrors","handleChange","target","TextField","onChange","Alert","severity","errorsData","Routes","useLocation","App","prefersDarkMode","useMediaQuery","React","useMemo","CssBaseline","ThemeProvider","initialLocale","locales","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35453df1.chunk.js","sourcesContent":["export const LOCALES = [\"en_US\", \"pl_PL\", \"de_DE\"];","// Default theme can be found here: https://material-ui.com/customization/default-theme/\nimport { createMuiTheme } from \"@material-ui/core\";\n\nexport const LIGHT_THEME = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: \"#449ee2\"\n        },\n        secondary: {\n            main: \"#99d8ff\"\n        },\n        background: {\n            default: \"#FAFAFA\"\n        }\n    }\n});\n\nexport const DARK_THEME = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: \"#99CC66\"\n        }\n    }\n});","// Here we define translations for the component.\n\nconst translations = {\n    title: {\n        en_US: \"Home\",\n        de_DE: \"Startseite\",\n        pl_PL: \"Strona główna\"\n    }\n}\n\nexport default translations;","// Here we define translations for the component.\n\nconst translations = {\n    example: {\n        en_US: \"Example\",\n        de_DE: \"Beispiel\",\n        pl_PL: \"Przykład\"\n    }\n}\n\nexport default translations;","export default __webpack_public_path__ + \"static/media/circles-logo.420d4698.svg\";","// Deps scoped imports.\nimport React from \"react\";\nimport { makeStyles, AppBar, Toolbar, Button } from \"@material-ui/core\";\nimport { useLittera } from \"react-littera\";\nimport cx from \"classnames\";\n\n// Project scoped imports.\nimport { useHistory } from 'react-router-dom';\n// Component scoped imports.\nimport styles from \"./styles\";\nimport translations from \"./trans\";\nimport logo from '../../../assets/circles-logo.svg'\n\n\nconst Navigation = (props: ComponentProps) => {\n    const translated = useLittera(translations);\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <>\n            <AppBar elevation={0} position='static' color='transparent' >\n                <Toolbar className={classes.toolbar}>\n                    <img className={classes.logo} src={logo} onClick={() => history.push('/home')} />\n                    <Button className={classes.navlink} variant=\"contained\" color=\"secondary\" onClick={() => history.push('/home')}>Home</Button>\n                    <Button className={classes.navlink} variant=\"contained\" color=\"secondary\" onClick={() => history.push('/home/users')}>Users</Button>\n                    <Button className={classes.navlink} variant=\"contained\" color=\"secondary\" onClick={() => history.push('/home/rooms')}>Rooms</Button>\n                </Toolbar>\n            </AppBar>\n        </>)\n}\n\n// Creates a hook for generating classnames.\nconst useStyles = makeStyles(styles);\n\n// Props the component accepts.\ntype ComponentProps = {\n    className?: string;\n    style?: React.CSSProperties\n}\n\n// Time to export! 🚚\nexport default Navigation;","import { createStyles } from \"@material-ui/core/styles\";\n// Here we define styles for the component.\n\nexport default ((theme: any) => createStyles({\n    root: {\n\n    },\n    toolbar: {\n        height: '10vh',\n        boxShadow: 'rgba(50, 50, 105, 0.15) 0px 2px 5px 0px, rgba(0, 0, 0, 0.05) 0px 1px 1px 0px'\n    },\n\n    logo: {\n        height: '50px',\n        marginRight: '4%',\n        cursor: 'pointer',\n    },\n\n    navlink: {\n        margin: '0 1.2%',\n    }\n}));","// Here we define translations for the component.\n\nconst translations = {\n    example: {\n        en_US: \"Example\",\n        de_DE: \"Beispiel\",\n        pl_PL: \"Przykład\"\n    }\n}\n\nexport default translations;","// Deps scoped imports.\nimport React from \"react\";\nimport { makeStyles, Box } from \"@material-ui/core\";\nimport { useLittera } from \"react-littera\";\nimport cx from \"classnames\";\n\n// Project scoped imports.\n\n// Component scoped imports.\nimport styles from \"./styles\";\nimport translations from \"./trans\";\n\nconst Welcome = (props: ComponentProps) => {\n    const translated = useLittera(translations);\n    const classes = useStyles();\n\n    return <div className={cx(classes.root, props.className)} style={props.style}>\n        <Box className={classes.container1}>\n            <Box className={classes.top1}>\n                <h2>Hello &apos;username&apos;</h2>\n                <h3>Thank you for your contribution in Assembless!</h3>\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Provident dolores aut eaque nihil aperiam? Porro velit id odio, distinctio impedit at itaque laboriosam incidunt eum! Nemo doloremque nisi in, iure odio incidunt aperiam laudantium dolores molestias explicabo aspernatur? Ipsam, doloribus?</p>\n            </Box>\n            <Box className={classes.bottom1}>\n                <h3>Circles Web in numbers</h3>\n                <Box className={classes.statContainer}></Box>\n            </Box>\n        </Box>\n        <Box className={classes.container2}>\n            <h2>Circles Web</h2>\n        </Box>\n    </div>\n}\n\n// Creates a hook for generating classnames.\nconst useStyles = makeStyles(styles);\n\n// Props the component accepts.\ntype ComponentProps = {\n    className?: string;\n    style?: React.CSSProperties\n}\n\n// Time to export! 🚚\nexport default Welcome;","import { createStyles } from \"@material-ui/core/styles\";\n// Here we define styles for the component.\n\nexport default ((theme: any) => createStyles({\n    root: {\n        height: '88vh',\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n\n    container1: {\n        flex: '1',\n        minWidth: '300px',\n        padding: '30px',\n    },\n\n    top1: {\n        boxShadow: 'rgba(50, 50, 105, 0.15) 0px 2px 5px 0px, rgba(0, 0, 0, 0.05) 0px 1px 1px 0px',\n        padding: '30px',\n        marginBottom: '30px',\n        borderRadius: '4px',\n    },\n\n    bottom1: {\n        boxShadow: 'rgba(50, 50, 105, 0.15) 0px 2px 5px 0px, rgba(0, 0, 0, 0.05) 0px 1px 1px 0px',\n        padding: '30px',\n        borderRadius: '4px',\n    },\n\n    statContainer: {\n        height: '130px',\n        borderRadius: '8px',\n    },\n\n    container2: {\n        flex: '1',\n        padding: '30px',\n    },\n\n\n\n}));","export type TResponse = { status: number, message?: string, data: any };\n\nexport interface IClient {\n    url: string\n}\n\nexport class Client implements IClient {\n    url: string\n\n    constructor(url: string) {\n        this.url = url;\n    }\n\n    makeArguments(args: { [key: string]: string }) {\n        return Object.entries(args).map((e => `${e[0]}=${typeof e[1] === \"object\" ? JSON.stringify(e[1]) : e[1]}`)).join(\"&\");\n    }\n\n    execute(command: ICommand) {\n        return new Promise<{ status: number, data: any }>((resolve, reject) => {\n            let once = false;\n            const cmd = command.exec[0];\n            const args = this.makeArguments(command.exec[1]);\n\n            const reqUrl = `${this.url}${cmd}?${args}`;\n\n            const handleResolve = (response: any) => {\n                if (!once) {\n                    once = true;\n\n                    const parsed_response = response\n\n                    console.log(\"📶\", cmd, \"=>\", parsed_response);\n                    resolve(parsed_response);\n                }\n\n            }\n\n            const headers = new Headers({\n                'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'multipart/form-data'\n            });\n\n            fetch(reqUrl, { mode: \"cors\", headers })\n                .then(response => response.json())\n                .then(handleResolve)\n                .catch(reject);\n        })\n    }\n}\n\n\nexport interface ICommand {\n    exec: [string, { [key: string]: any }];\n    status: number;\n\n    parse(status: number, data: any): any\n}\n\nexport class Command implements ICommand {\n    exec: [string, { [key: string]: any }];\n    status: number;\n\n    constructor(exec: [string, { [key: string]: any }]) {\n        this.exec = exec;\n        this.status = 0;\n    }\n\n    parse(status: number, data: any) {\n        return data;\n    }\n}","import { useCallback, useEffect, useRef, useState } from 'react'\n\nexport const useSignal = () => {\n    const [, updateState] = useState();\n    // @ts-ignore\n    return useCallback(() => updateState({}), []);\n}\n\nexport const useForkedState = <T extends any[], R>(fn: (...args: T) => R, ...args: T) => {\n    const ref = useRef(null as unknown as [R, (value: R) => void]);\n    const signal = useSignal();\n\n    if (ref.current === null) {\n        const value: R = fn(...args);\n        const setState = (val: R) => { ref.current[0] = val; signal(); }\n\n        ref.current = [value, setState];\n    }\n\n    useEffect(() => {\n        const value = fn(...args);\n\n        if (ref.current[0] !== value)\n            ref.current[1](value);\n    }, [fn, args]);\n\n    return ref.current;\n}","import { useRef, useEffect } from 'react';\nimport { Client, Command } from './client';\nimport { useSignal } from '../utils/hooks/general';\nimport config from '../config/config';\n\nconst HOST_URL = config.host_url;\nconst cli = new Client(HOST_URL);\n\nexport const useCommand = <T extends Command>(command: new (...args: any[]) => T, ...args: any[]) => {\n    const ref = useRef(null as unknown as { status: number, data?: any, message?: string });\n    const signal = useSignal();\n\n    useEffect(() => {\n        ref.current = { status: 102 };\n        \n        const fn = async () => {\n            const _args = args || [];\n\n            const rq = await cli.execute(new command(..._args))\n            ref.current = rq;\n            signal();\n        }\n        fn();\n    // @ts-ignore\n    }, []);\n    \n    return ref.current;\n}\n\n/**\n * \n * @param command \n * @param args \n * @example\n * const dispatchCommand = useDispatchCommand();\n * ...\n * dispatchCommand(AccountCreate, \"mike.eling97@gmail.com\", \"ThisIsMyPassBro\")\n */\nexport const useDispatchCommand = () => {\n    const ref = useRef(null as unknown as (command: any, ...args: any[]) => Promise<{ status: number, data: any }>);\n    const signal = useSignal();\n    \n    if (ref.current === null) {\n        \n        const fn = async (command: any, ...args: any[]) => {\n            const _args = args || [];\n            \n            const rq = await cli.execute(new command(..._args))\n            signal();\n            return rq;\n        }\n        ref.current = (command: any, ...args: any[]) => fn(command, ...args);\n    }\n    \n    return ref.current;\n}","const config = {\n    host_url: \"https://us-central1-ping-82fee.cloudfunctions.net/\" //\"http://localhost:5001/ping-82fee/us-central1/\" //\n};\n\nexport default config;","export const isLoaded = (request: any) => {\n    return request !== null && request.status !== 102\n}\n\nconst arrayToStringList = (arr: string[]) =>\n    arr.toString().replace(/,/g, \", \")\n\ntype TType = \"string\" | \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\" | \"null\" | \"array\";\n\nexport const checkType = (name: string, value: any, ...types: TType[]) => {\n    let t: TType = typeof value;\n\n    if (t === \"object\")\n        if (value === null)\n            t = \"null\";\n        else if (Array.isArray(value))\n            t = \"array\";\n\n    if (!types.includes(t))\n        throw new Error(`Expected ${arrayToStringList(types)} for ${name}, got ${typeof value}`)\n\n    return value;\n}\n\n/**\n * Same as checkType but accepts an parent object.\n * @param obj \n * @param field \n * @param types \n */\nexport const checkField = <T, K extends keyof T>(obj: T, field: K, ...types: TType[]) => {\n    const val = obj[field];\n    checkType(field as string, val, ...types);\n    return val;\n}","import { Command } from \"./client\";\nimport { IAccount } from \"types\";\nimport { checkField, checkType } from \"./utils\";\n\nexport class AccountInfo extends Command {\n    constructor(account_id: string, flags?: boolean, rooms?: boolean, friends?: boolean) {\n        super([\"account-accountInfo\", { account_id, flags: !!flags, rooms: !!rooms, friends: !!friends }]);\n\n        checkType(\"account_id\", account_id, \"string\");\n\n        checkType(\"flags\", flags, \"boolean\", \"undefined\");\n        checkType(\"rooms\", rooms, \"boolean\", \"undefined\");\n        checkType(\"friends\", friends, \"boolean\", \"undefined\");\n    }\n\n    parse(status: number, data: IAccount): IAccount {\n        if (status !== 200) return data;\n\n        checkType(\"data\", data, \"object\");\n\n        checkField(data, \"id\", \"string\");\n        checkField(data, \"label\", \"string\");\n        checkField(data, \"created_at\", \"string\");\n        checkField(data, \"avatar_url\", \"string\", \"undefined\");\n\n        checkField(data, \"contact\", \"object\");\n        if (data.contact)\n            checkField(data.contact, \"email\", \"string\");\n\n        checkField(data, \"details\", \"object\");\n        checkField(data, \"flags\", \"object\", \"undefined\");\n        checkField(data, \"friends\", \"array\", \"undefined\");\n        checkField(data, \"rooms\", \"array\", \"undefined\");\n\n        return { ...data, created_at: new Date(data.created_at) };\n    }\n}\n\nexport class AccountChange extends Command {\n    constructor(account_id: string, changes: { label?: string, name?: string, surname?: string }) {\n        super([\"account-accountChange\", { account_id, changes: JSON.stringify(changes) }]);\n    }\n\n    parse(status: number, data: IAccount) {\n        if (status !== 200) return data;\n\n        // TODO: Ensure types.\n\n        return data;\n    }\n}\n\nexport class AccountList extends Command {\n    constructor(included?: string[], volume?: number) {\n        super([\"account-accountList\", { volume, included }]);\n\n        checkType(\"volume\", volume, \"number\", \"undefined\");\n        checkType(\"included\", included, \"array\", \"undefined\");\n    }\n\n    parse(status: number, data: any) {\n        if (status !== 200) return data;\n\n        // TODO: Ensure types.\n\n        return data;\n    }\n}\n\nexport class AccountCreate extends Command {\n    constructor(data: { email: string, password: string, label?: string }) {\n        super([\"account-accountCreate\", data]);\n    }\n\n    parse(status: number, data: any) {\n        if (status !== 200) return data;\n\n        // TODO: Ensure types.\n\n        return data;\n    }\n}\n\nexport class AccountLogin extends Command {\n    constructor(token: string) {\n        super([\"account-accountLogin\", { token }]);\n    }\n\n    parse(status: number, data: any) {\n        if (status !== 200) return data;\n\n        // TODO: Ensure types.\n\n        return data;\n    }\n}\n\nexport class AccountFind extends Command {\n    constructor(data: { email?: string, label?: string }) {\n        super([\"account-accountFind\", data]);\n    }\n\n    parse(status: number, data: any) {\n        if (status !== 200) return data;\n\n        // TODO: Ensure types.\n\n        return data;\n    }\n}\n\nexport class AccountAddContact extends Command {\n    constructor(data: { account_id: string, contact_id: string }) {\n        super([\"account-accountAddContact\", data]);\n    }\n\n    parse(status: number, data: any) {\n        if (status !== 200) return data;\n\n        return data;\n    }\n}\n\nexport class RoomInfo extends Command {\n    constructor(room_id: string, accounts?: boolean) {\n        super([\"room-roomInfo\", { room_id, accounts }]);\n    }\n\n    parse(status: number, data: IAccount) {\n        if (status !== 200) return data;\n\n        // TODO: Ensure types.\n\n        return data;\n    }\n}\n\nexport class RoomCreate extends Command {\n    constructor(account_id: string, label: string, invite: string[]) {\n        super([\"room-roomCreate\", { label, invite: [...invite, account_id] }]);\n    }\n\n    parse(status: number, data: any) {\n        if (status !== 200) return data;\n\n        // TODO: Ensure types.\n\n        return data;\n    }\n}\n\nexport class AccountGetSuggestions extends Command {\n    // deepcode ignore no-any: Type declaration of 'any' loses type-safety\n    constructor(account_id: string) {\n        super([\"account-accountGetSuggestions\", { account_id }]);\n    };\n\n    parse(status: number, data: any) {\n        if (status !== 200) return data;\n\n        // TODO: Ensure types.\n\n        return data;\n    }\n}\n\nexport class RoomList extends Command {\n    constructor(volume?: number) {\n        super([\"room-roomList\", { volume }]);\n\n        checkType(\"volume\", volume, \"number\", \"undefined\");\n    }\n\n    parse(status: number, data: any) {\n        if (status !== 200) return data;\n\n        checkType(\"data\", data, \"object\");\n        checkField(data, 'id', 'string');\n        checkField(data, 'label', 'string');\n\n        return data;\n    }\n}\n\n","// Here we define translations for the component.\n\nconst translations = {\n    example: {\n        en_US: \"Example\",\n        de_DE: \"Beispiel\",\n        pl_PL: \"Przykład\"\n    }\n}\n\nexport default translations;","// Deps scoped imports.\nimport React from \"react\";\nimport { makeStyles, Box, Avatar, Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\nimport { useLittera } from \"react-littera\";\nimport cx from \"classnames\";\nimport { Switch, Route, useHistory } from 'react-router-dom'\n\n// Project scoped imports.\nimport { useCommand } from \"api/hooks\";\nimport { AccountList } from \"api/commands\";\nimport { useForkedState } from \"utils/hooks/general\";\nimport { isLoaded } from \"api/utils\";\nimport { IAccount } from \"types\";\n\n\n// Component scoped imports.\nimport styles from \"./styles\";\nimport translations from \"./trans\";\n\n\nconst Users = (props: ComponentProps) => {\n    const translated = useLittera(translations);\n    const classes = useStyles();\n\n    const accountsRq = useCommand(AccountList, undefined);\n    const [accounts] = useForkedState(rq => isLoaded(rq) ? rq.data as IAccount[] : null, accountsRq);\n\n    if (!accounts) return <h4>Loading...</h4>;\n\n    return <Box className={cx(classes.root, props.className)} style={props.style}>\n        <Box className={classes.leftContainer}>\n            <Switch>\n                <Route exact path='/home/users' component={UserDetailsWelcome} />\n                <Route exact path='/home/users/:id' component={(path: any) => <UserDetails accounts={accounts} path={path} />} />\n            </Switch>\n        </Box>\n        <Box className={classes.rightContainer}>\n            <Table>\n                <TableHead>\n                    <TableRow >\n                        <TableCell></TableCell>\n                        <TableCell ><h4 className={classes.categoryName}>Name</h4></TableCell>\n                        <TableCell ><h4 className={classes.categoryName}>Username</h4></TableCell>\n                        <TableCell ><h4 className={classes.categoryName}>Flags</h4></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody >\n                    {\n                        accounts.map((acc, index) => <SingleAccount key={index\n                        } accData={acc} />)\n                    }\n                </TableBody>\n            </Table>\n        </Box>\n    </Box >\n}\n\nconst UserDetailsWelcome = () => {\n    return <div>userDetails</div>\n}\n\nconst UserDetails = ({ accounts, path }: { accounts: IAccount[], path: any }) => {\n\n    const account = accounts.find(acc => acc.id === path.match.params.id)\n\n    if (!account) return <div>error</div>\n    return (\n        <>\n            <Box style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }} >\n                <Avatar style={{ height: '110px', width: '110px', marginTop: '20px' }} alt='profile photo' src={account.avatar_url} />\n                {account.details?.first_name && <h3>{account.details?.first_name}</h3>}\n                <h4>{account.label}</h4>\n            </Box>\n            <Box>\n\n            </Box>\n        </>\n    )\n}\n\nconst SingleAccount = ({ accData }: { accData: IAccount }) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const handleClick = (e: any) => {\n        history.push(`/home/users/${accData.id}`)\n    }\n\n    return (\n        <TableRow style={{ cursor: 'pointer' }} onClick={handleClick}>\n            <TableCell className={classes.avatarContainer}>\n                <Avatar className={classes.avatar} alt='profile photo' src={accData?.avatar_url} />\n            </TableCell>\n            <TableCell className={classes.name}>{accData.details?.first_name && accData.details?.first_name} {accData.details?.last_name && accData.details?.last_name}</TableCell>\n            <TableCell>{accData.label}</TableCell>\n            <TableCell ><Box className={classes.flags}>\n                {accData.flags?.includes(\"verify_email\") && <p>verify</p>}\n                {accData.flags?.includes('needs_init') && <p>init</p>}\n            </Box>\n            </TableCell>\n        </TableRow>\n    )\n}\n\n// Creates a hook for generating classnames.\nconst useStyles = makeStyles(styles);\n\n// Props the component accepts.\ntype ComponentProps = {\n    className?: string;\n    style?: React.CSSProperties\n}\n\n// Time to export! 🚚\nexport default Users;","import { createStyles } from \"@material-ui/core/styles\";\n// Here we define styles for the component.\n\nexport default ((theme: any) => createStyles({\n    root: {\n        height: '90vh',\n        display: 'flex',\n    },\n\n    leftContainer: {\n        width: '25%',\n        minWidth: '300px',\n        padding: '30px',\n        borderRight: '4px solid #e0e0e0',\n    },\n\n    rightContainer: {\n        flex: '1',\n        minWidth: '300px',\n        overflowY: 'scroll',\n\n    },\n\n    tableRow: {\n        cursor: 'pointer',\n    },\n\n    categoryName: {\n        opacity: 0.5,\n        margin: '0'\n    },\n\n    avatarContainer: {\n        paddingRight: '0px',\n        paddingLeft: '2rem',\n        width: '3%',\n    },\n\n    avatar: {\n        height: '50px',\n        width: '50px',\n        border: `3px solid #449ee2`\n    },\n\n    name: {\n        fontSize: '16px',\n        fontWeight: 600,\n    },\n\n    flags: {\n        display: 'flex'\n    }\n}));","// Deps scoped imports.\nimport React from \"react\";\nimport { makeStyles, Box, Avatar, Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\nimport cx from \"classnames\";\n\n// Project scoped imports.\nimport { useCommand } from 'api/hooks';\nimport { RoomList } from 'api/commands';\nimport { useForkedState } from 'utils/hooks/general';\nimport { isLoaded } from \"api/utils\";\nimport { IRoom } from \"types\";\n// Component scoped imports.\nimport styles from \"./styles\";\n\n\n\n\nconst Component = () => {\n    const classes = useStyles();\n\n    const roomsRq = useCommand(RoomList);\n    const [rooms] = useForkedState(rq => isLoaded(rq) ? rq.data as IRoom[] : null, roomsRq);\n\n    if (!rooms) return <h4>Loading...</h4>;\n    return <Box >\n        <Table>\n            <TableHead>\n                <TableRow >\n                    <TableCell><h4>Room ID</h4></TableCell>\n                    <TableCell><h4>Name</h4></TableCell>\n                    <TableCell><h4>Created at</h4></TableCell>\n                    <TableCell><h4>Access</h4></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody >\n                {rooms.map((room, index) => <SingleRoom key={index} roomData={room} />)}\n            </TableBody>\n        </Table>\n    </Box>\n}\n\nconst SingleRoom = ({ roomData }: { roomData: IRoom }) => {\n    return (\n        <TableRow style={{ cursor: 'pointer' }}>\n            <TableCell>{roomData.id}</TableCell>\n            <TableCell>{roomData.label}</TableCell>\n            <TableCell> needs date handling</TableCell>\n            <TableCell>to do parse from string</TableCell>\n        </TableRow>\n    )\n}\n\nconst useStyles = makeStyles(styles);\n\n\n// Time to export! 🚚\nexport default Component;","import { createStyles } from \"@material-ui/core/styles\";\n\nexport default ((theme: any) => createStyles({\n    root: {\n        // Container styles...\n    },\n    h4: {\n        // Head text styles...\n        color: theme.palette.primary\n    }\n}));","// Deps scoped imports.\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useLittera } from \"react-littera\";\nimport cx from \"classnames\";\nimport { Switch, Route } from 'react-router-dom'\n\n// Project scoped imports.\nimport styles from \"./styles\";\nimport translations from \"./trans\";\n\n//components\nimport Navigation from './Navigation/index';\nimport Welcome from './Welcome/index';\nimport Users from './Users/index';\nimport Rooms from './Rooms/index';\n\n/**\n * Home component\n * @description This is the main view.\n * @version 1.0.0\n * @author Mike Eling <mike.eling97@gmail.com>\n */\n\nconst Home = (props: ComponentProps) => {\n    const translated = useLittera(translations);\n    const classes = useStyles();\n\n    return <div className={cx(classes.root, props.className)} style={props.style}>\n        <Navigation />\n        <Switch>\n            <Route exact path='/home' component={Welcome} />\n            <Route path='/home/users' component={Users} />\n            <Route path='/home/rooms' component={Rooms} />\n        </Switch>\n    </div>\n}\n\n// Creates a hook for generating classnames.\nconst useStyles = makeStyles(styles);\n\n// Props the component accepts.\ntype ComponentProps = {\n    className?: string;\n    style?: React.CSSProperties\n}\n\n// Time to export! 🚚\nexport default Home;","import { createStyles } from \"@material-ui/core/styles\";\n// Here we define styles for the component.\n\nexport default ((theme: any) => createStyles({\n    root: {\n        height: '100vh',\n\n    },\n    toolbar: {\n        height: '10vh',\n        color: theme.palette.primary\n    }\n}));","// Here we define translations for the component.\n\nconst translations = {\n    title: {\n        en_US: \"Page not found\",\n        de_DE: \"Seite nicht gefunden\",\n        pl_PL: \"Nie znaleziono strony\"\n    }\n}\n\nexport default translations;","// Deps scoped imports.\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useLittera } from \"react-littera\";\nimport cx from \"classnames\";\n\n// Project scoped imports.\nimport styles from \"./styles\";\nimport translations from \"./trans\";\n\n/**\n * WrongPage component\n * @description This is the view seen when entering an invalid route.\n * @version 1.0.0\n * @author Mike Eling <mike.eling97@gmail.com>\n */\nconst WrongPage = (props: ComponentProps) => {\n    const translated = useLittera(translations);\n    const classes = useStyles();\n\n    return <div className={cx(classes.root, props.className)} style={props.style}>\n        <h4 className={classes.h4}>{translated.title}</h4>\n    </div>\n}\n\n// Creates a hook for generating classnames.\nconst useStyles = makeStyles(styles);\n\n// Props the component accepts.\ntype ComponentProps = {\n    className?: string;\n    style?: React.CSSProperties\n}\n\n// Time to export! 🚚\nexport default WrongPage;","import { createStyles } from \"@material-ui/core/styles\";\n// Here we define styles for the component.\n\nexport default ((theme: any) => createStyles({\n    root: {\n        // Container styles...\n    },\n    h4: {\n        // Head text styles...\n        color: theme.palette.primary\n    }\n}));","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    formContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '30px 40px',\n        borderRadius: '8px',\n        boxShadow: 'rgba(17, 17, 26, 0.1) 0px 4px 16px, rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px'\n    },\n\n    topContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginBottom: '20px',\n    },\n\n    logo: {\n        width: '60px',\n        marginBottom: '15px',\n    },\n\n    title: {\n        fontWeight: 600,\n        fontSize: '18px',\n        margin: '0 20px',\n    },\n\n    login: {\n\n    },\n\n    password: {\n        marginTop: '15px',\n    },\n\n    btnContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '20px',\n    },\n\n    loginBtn: {\n        width: '150px',\n    },\n\n    error: {\n        marginTop: '10px',\n    },\n}));\n\nexport default useStyles;","import React, { useState, useRef } from 'react'\nimport { TextField, Box, Button } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from \"./styles\"\nimport logo from '../../assets/circles-logo.svg'\n\nconst Login = () => {\n\n    const history = useHistory();\n    const classes = useStyles();\n\n    const [inputValues, setInputValues] = useState({ username: '', password: '' })\n    const [errors, setErrors] = useState({ username: '', password: '' })\n\n    const handleChange = (e: any) => {\n        setInputValues({ ...inputValues, [e.target.id]: e.target.value })\n        setErrors({ username: '', password: '' })\n    }\n\n    const handleSubmit = () => {\n\n        const errorsData = validate(inputValues)\n        if (!errorsData.username && !errorsData.password) {\n            history.push('/home')\n        }\n        else {\n            setErrors(errorsData)\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            Home\n            <form className={classes.formContainer}>\n                <Box className={classes.topContainer}>\n                    <img className={classes.logo} src={logo} alt='logo' />\n                    <h2 className={classes.title}>Circles Administration Panel</h2>\n                </Box>\n                <TextField className={classes.login} id=\"username\" label=\"Login\" variant=\"outlined\" value={inputValues.username} onChange={handleChange} />\n                {errors.username && <Alert className={classes.error} severity=\"error\">{errors.username}</Alert>}\n                <TextField className={classes.password} type='password' id=\"password\" label=\"Password\" variant=\"outlined\" value={inputValues.password} onChange={handleChange} />\n                {errors.password && <Alert className={classes.error} severity=\"error\">{errors.password}</Alert>}\n                <Box className={classes.btnContainer}>\n                    <Button className={classes.loginBtn} variant='contained' onClick={handleSubmit}>login</Button>\n                </Box>\n            </form>\n        </div >\n    )\n}\n\n\n\nconst validate = (values: TFormInputs) => {\n\n    const { REACT_APP_LOGIN, REACT_APP_PASSWORD } = process.env\n\n    const errors = { username: '', password: '' };\n\n    if (values.username && values.username !== REACT_APP_LOGIN) {\n        errors.username = 'Username is invalid.'\n    }\n    if (!values.username) {\n        errors.username = 'Username is required.';\n    }\n    if (values.password && values.password !== REACT_APP_PASSWORD) {\n        errors.password = 'Password is invalid.'\n    }\n    if (!values.password) {\n        errors.password = 'Password is required.';\n    }\n\n    return errors;\n}\n\ntype TFormInputs = {\n    username: string;\n    password: string;\n}\n\n\nexport default Login;","import React, { useEffect } from \"react\";\nimport { Switch, Route, useHistory, useLocation } from \"react-router-dom\";\nimport { Home, WrongPage } from \"pages/\";\nimport Login from '../pages/Login/index'\n\nconst Routes = () => {\n    const location = useLocation();\n\n    return <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/home\" component={Home} />\n        <Route exact component={WrongPage} />\n    </Switch>\n}\n\nexport default Routes;","import React from 'react';\nimport { LitteraProvider } from 'react-littera';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider, useMediaQuery, CssBaseline } from '@material-ui/core';\n\nimport { LOCALES } from \"utils/language\";\nimport { LIGHT_THEME, DARK_THEME } from \"utils/theme\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      !prefersDarkMode ? LIGHT_THEME : DARK_THEME,\n    [prefersDarkMode],\n  );\n\n  return (\n    <>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <LitteraProvider initialLocale=\"en_US\" locales={LOCALES}>\n          <Router>\n            <Routes />\n          </Router>\n        </LitteraProvider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}