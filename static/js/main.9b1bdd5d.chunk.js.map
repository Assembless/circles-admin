{"version":3,"sources":["utils/language.ts","utils/theme.ts","pages/Home/trans.ts","pages/Home/index.tsx","pages/Home/styles.ts","pages/WrongPage/trans.ts","pages/WrongPage/index.tsx","pages/WrongPage/styles.ts","pages/Login/styles.ts","pages/Login/index.tsx","components/Routes.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOCALES","LIGHT_THEME","createMuiTheme","palette","type","primary","main","DARK_THEME","translations","title","en_US","de_DE","pl_PL","useStyles","makeStyles","theme","createStyles","root","h4","color","Home","props","translated","useLittera","classes","Container","maxWidth","className","cx","style","WrongPage","height","display","alignItems","justifyContent","loginContainer","flexDirection","login","marginBottom","password","Login","history","useHistory","useState","setLogin","setPassword","setError","handleChange","e","value","target","id","process","REACT_APP_LOGIN","REACT_APP_PASSWORD","Box","TextField","label","variant","onChange","Button","onClick","push","Routes","useLocation","path","exact","component","App","prefersDarkMode","useMediaQuery","React","useMemo","CssBaseline","ThemeProvider","initialLocale","locales","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b1bdd5d.chunk.js","sourcesContent":["export const LOCALES = [\"en_US\", \"pl_PL\", \"de_DE\"];","// Default theme can be found here: https://material-ui.com/customization/default-theme/\nimport { createMuiTheme } from \"@material-ui/core\";\n\nexport const LIGHT_THEME = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: \"#99CC66\"\n        }\n    }\n});\n\nexport const DARK_THEME = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: \"#99CC66\"\n        }\n    }\n});","// Here we define translations for the component.\n\nconst translations = {\n    title: {\n        en_US: \"Home\",\n        de_DE: \"Startseite\",\n        pl_PL: \"Strona g≈Ç√≥wna\"\n    }\n}\n\nexport default translations;","// Deps scoped imports.\nimport React from \"react\";\nimport { makeStyles, Container } from \"@material-ui/core\";\nimport { useLittera } from \"react-littera\";\nimport cx from \"classnames\";\n\n// Project scoped imports.\nimport styles from \"./styles\";\nimport translations from \"./trans\";\n\n/**\n * Home component\n * @description This is the main view.\n * @version 1.0.0\n * @author Mike Eling <mike.eling97@gmail.com>\n */\nconst Home = (props: ComponentProps) => {\n    const translated = useLittera(translations);\n    const classes = useStyles();\n\n    return <Container maxWidth=\"sm\" className={cx(classes.root, props.className)} style={props.style}>\n        <h4 className={classes.h4}>{translated.title}</h4>\n    </Container>\n}\n\n// Creates a hook for generating classnames.\nconst useStyles = makeStyles(styles);\n\n// Props the component accepts.\ntype ComponentProps = {\n    className?: string;\n    style?: React.CSSProperties\n}\n\n// Time to export! üöö\nexport default Home;","import { createStyles } from \"@material-ui/core/styles\";\n// Here we define styles for the component.\n\nexport default ((theme: any) => createStyles({\n    root: {\n        // Container styles...\n    },\n    h4: {\n        // Head text styles...\n        color: theme.palette.primary\n    }\n}));","// Here we define translations for the component.\n\nconst translations = {\n    title: {\n        en_US: \"Page not found\",\n        de_DE: \"Seite nicht gefunden\",\n        pl_PL: \"Nie znaleziono strony\"\n    }\n}\n\nexport default translations;","// Deps scoped imports.\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useLittera } from \"react-littera\";\nimport cx from \"classnames\";\n\n// Project scoped imports.\nimport styles from \"./styles\";\nimport translations from \"./trans\";\n\n/**\n * WrongPage component\n * @description This is the view seen when entering an invalid route.\n * @version 1.0.0\n * @author Mike Eling <mike.eling97@gmail.com>\n */\nconst WrongPage = (props: ComponentProps) => {\n    const translated = useLittera(translations);\n    const classes = useStyles();\n\n    return <div className={cx(classes.root, props.className)} style={props.style}>\n        <h4 className={classes.h4}>{translated.title}</h4>\n    </div>\n}\n\n// Creates a hook for generating classnames.\nconst useStyles = makeStyles(styles);\n\n// Props the component accepts.\ntype ComponentProps = {\n    className?: string;\n    style?: React.CSSProperties\n}\n\n// Time to export! üöö\nexport default WrongPage;","import { createStyles } from \"@material-ui/core/styles\";\n// Here we define styles for the component.\n\nexport default ((theme: any) => createStyles({\n    root: {\n        // Container styles...\n    },\n    h4: {\n        // Head text styles...\n        color: theme.palette.primary\n    }\n}));","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    loginContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    login: {\n        marginBottom: '20px'\n    },\n\n    password: {\n\n    },\n}));\n\nexport default useStyles;","import React, { useState } from 'react'\nimport { TextField, Box, Button } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from \"./styles\"\n\nconst Login = () => {\n\n    const history = useHistory();\n    const classes = useStyles();\n\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(false);\n\n    const handleChange = (e: any) => {\n        const value = e.target.value\n        const id = e.target.id;\n        switch (id) {\n            case 'login':\n                setLogin(value);\n                setError(false);\n                break;\n            case 'password':\n                setPassword(value);\n                setError(false);\n                break;\n        }\n    }\n\n    const { REACT_APP_LOGIN, REACT_APP_PASSWORD } = process.env\n\n    const handleSubmit = () => {\n        if (login === REACT_APP_LOGIN && password === REACT_APP_PASSWORD) {\n            history.push('/');\n        }\n        else {\n            setError(true);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <form className={classes.loginContainer}>\n                <h2>Circles Administration Panel</h2>\n                <Box>\n                    <TextField className={classes.login} id=\"login\" label=\"Login\" variant=\"outlined\" value={login} onChange={handleChange} />\n                </Box>\n                <Box>\n                    <TextField className={classes.password} type='password' id=\"password\" label=\"Password\" variant=\"outlined\" value={password} onChange={handleChange} />\n                </Box>\n                <Button variant='contained' onClick={handleSubmit}>login</Button>\n            </form>\n        </div>\n    )\n}\n/* \nconst DisplayError = ({ fieldName, error, value }: { fieldName: string, error: boolean, value: string }) => {\n    if (!error) return null;\n    return (<>\n        {error && !value && <Alert style={{ margin: \" 15px 0\" }} severity=\"error\">\n            <AlertTitle>Upps...</AlertTitle>\n            {fieldName} is required</Alert>}\n        {error && value && <Alert style={{ margin: \" 15px 0\" }} severity=\"error\">\n            <AlertTitle>Upps...</AlertTitle>\n            {fieldName} wrong value</Alert>}\n    </>)\n}\n */\nexport default Login;","import React, { useEffect } from \"react\";\nimport { Switch, Route, useHistory, useLocation } from \"react-router-dom\";\nimport { Home, WrongPage } from \"pages/\";\nimport Login from '../pages/Login/index'\n\nconst Routes = () => {\n    const location = useLocation();\n\n    return <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact component={WrongPage} />\n    </Switch>\n}\n\nexport default Routes;","import React from 'react';\nimport { LitteraProvider } from 'react-littera';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider, useMediaQuery, CssBaseline } from '@material-ui/core';\n\nimport { LOCALES } from \"utils/language\";\nimport { LIGHT_THEME, DARK_THEME } from \"utils/theme\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      !prefersDarkMode ? LIGHT_THEME : DARK_THEME,\n    [prefersDarkMode],\n  );\n\n  return (\n    <>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <LitteraProvider initialLocale=\"en_US\" locales={LOCALES}>\n          <Router>\n            <Routes />\n          </Router>\n        </LitteraProvider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}